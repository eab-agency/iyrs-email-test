// ================
// Royall Mixins
// ================

@use "sass:math";
@use "breakpoints";

// ================
// Mixin: Outputs a @font-face rule
// More info: https://wiki.eab.com/display/RWD/fontFace%28%29+mixin

@mixin fontFace($_p-fileName, $_f-fontFamily: $_fileName, $_f-fontWeight: normal, $_f-fontStyle: normal) {
  @font-face {
    font-family: "#{$_f-fontFamily}";
    font-weight: $_f-fontWeight;
    font-style: $_f-fontStyle;
    src: url("/fonts/#{$_p-fileName}.woff") format("woff");
  }
}

// ================
// Mixin: Applies specific styles on hi-res displays
// More info: https://wiki.eab.com/display/RWD/mres%28%29+mixin

/* stylelint-disable media-feature-name-no-vendor-prefix */
@mixin mres($_mq-density: 1.1) {
  @media (-webkit-min-device-pixel-ratio: $_mq-density), (min-resolution: $_mq-density + "dppx") {
    @content;
  }
}
/* stylelint-enable media-feature-name-no-vendor-prefix */

// ================
// Mixin: Outputs two background images, one normal, and one optimized for hi-res screens
// More info: https://wiki.eab.com/display/RWD/backgroundImage%28%29+mixin

@mixin backgroundImage($_p-img, $_p-ext: "png", $_p-hiRes: "-2x", $_mq-hiResMin: 1.1) {
  background: {
    image: url($_p-img + "." + $_p-ext);
    size: contain;
    repeat: no-repeat;
  }

  @include mres($_mq-hiResMin) {
    background-image: url($_p-img + $_p-hiRes + "." + $_p-ext);
  }
}

// ================
// Mixin: Adds a CSS counter to any element
// More info: https://wiki.eab.com/display/RWD/counter%28%29+mixin

@mixin counter($_x-counterName, $_x-item, $_x-number: null) {
  counter-reset: $_x-counterName;

  #{$_x-item} {
    counter-increment: $_x-counterName;

    @if $_x-number == null {
      &::before {
        content: counter(#{$_x-counterName});
      }
    } @else {
      #{$_x-number}::before {
        content: counter(#{$_x-counterName});
      }
    }
  }
}

// ================
// Mixin: Creates a Flexbox-based "sticky" footer
// More info: https://wiki.eab.com/display/RWD/stickyFooter%28%29+mixin

@mixin stickyFooter($_x-content, $_x-wrapper: "body") {
  #{$_x-wrapper} {
    display: flex;
    flex-direction: column;
    min-height: 100vh;

    & > * {
      flex-shrink: 0;
    }
  }

  #{$_x-content} {
    flex-grow: 1;
  }
}

// ================
// Mixin: Resizes an <iframe> to fit its container
// More info: https://wiki.eab.com/display/RWD/iframeWrapper%28%29+mixin

@mixin iframeWrapper($_d-iframeWidth: 560, $_d-iframeHeight: 315) {
  position: relative;
  width: 100%;
  height: 0;
  padding-top: ($_d-iframeHeight / $_d-iframeWidth) * 100%;

  iframe {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: #000;
  }
}
